/**
 * Expressive TypeScript Logger for Node.js
 * @packageDocumentation
 */
import { ILogLevel, IErrorObject, ILogObject, ISettings, ISettingsParam, IStackFrame, IStd, TTransportLogger, TLogLevelName, TLogLevelId, IJsonHighlightColors, TLogLevelColor, ICodeFrame } from "./interfaces";
export { ILogLevel, TTransportLogger, ILogObject, IErrorObject, IStackFrame, ISettingsParam, IStd, TLogLevelName, TLogLevelId, IJsonHighlightColors, TLogLevelColor, ISettings, ICodeFrame, };
/**
 * üìù Expressive TypeScript Logger for Node.js
 * @public
 */
export declare class Logger {
    private readonly _logLevels;
    private _ignoreStackLevels;
    private _attachedTransports;
    private readonly _minLevelToStdErr;
    /** Readonly settings of the current logger instance. Used for testing. */
    readonly settings: ISettings;
    /**
     * @param settings - Configuration of the logger instance  (all settings are optional with sane defaults)
     */
    constructor(settings?: ISettingsParam);
    /**
     *  Attaches external Loggers, e.g. external log services, file system, database
     *
     * @param transportLogger - External logger to be attached. Must implement all log methods.
     * @param minLevel        - Minimum log level to be forwarded to this attached transport logger. (e.g. debug)
     */
    attachTransport(transportLogger: TTransportLogger<(message: ILogObject) => void>, minLevel?: TLogLevelName): void;
    /**
     * Logs a silly message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    silly(...args: unknown[]): ILogObject;
    /**
     * Logs a trace message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    trace(...args: unknown[]): ILogObject;
    /**
     * Logs a debug message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    debug(...args: unknown[]): ILogObject;
    /**
     * Logs an info message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    info(...args: unknown[]): ILogObject;
    /**
     * Logs a warn message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    warn(...args: unknown[]): ILogObject;
    /**
     * Logs an error message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    error(...args: unknown[]): ILogObject;
    /**
     * Logs a fatal message.
     * @param args  - Multiple log attributes that should be logged out.
     */
    fatal(...args: unknown[]): ILogObject;
    private _handleLog;
    private _buildLogObject;
    private _toStackObjectArray;
    private _printPrettyLog;
    private _printPrettyStack;
    private _printPrettyCodeFrame;
    private _printJsonLog;
}
//# sourceMappingURL=index.d.ts.map