{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authorized/home-landing/home-landing.component.html","webpack:///src/app/authorized/home-landing/home-landing.component.ts","webpack:///src/app/authorized/home/home.component.html","webpack:///src/app/authorized/home/home.component.ts","webpack:///src/app/authorized/need-service/need-service.component.html","webpack:///src/app/authorized/need-service/need-service.component.ts","webpack:///src/app/authorized/provide-service/provide-service.component.html","webpack:///src/app/authorized/provide-service/provide-service.component.ts","webpack:///src/app/components/front-page/front-page.component.html","webpack:///src/app/components/front-page/front-page.component.ts","webpack:///src/app/components/login-register-landing/login-register-landing.component.html","webpack:///src/app/components/login-register-landing/login-register-landing.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/constants/enpoints.ts","webpack:///src/app/nav/menu/menu.component.html","webpack:///src/app/nav/menu/menu.component.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","canActivate","children","AppRoutingModule","AppComponent","title","AppModule","HomeLandingComponent","images","map","n","HomeComponent","authenticationService","user","userName","profilePicture","NeedServiceComponent","ProvideServiceComponent","FrontPageComponent","LoginRegisterLandingComponent","LoginComponent","formBuilder","route","router","loading","submitted","loginSuccess","currentUserValue","navigate","loginForm","group","email","required","password","returnUrl","snapshot","queryParams","preventDefault","console","log","f","invalid","login","value","pipe","subscribe","data","result","error","controls","RegisterComponent","registerSuccess","verified","registerForm","firstName","lastName","phone","repeatPassword","verifyNumber1","disabled","verifyNumber2","verifyResult","patchValue","Math","floor","random","isVerified","getRawValue","register","res","err","rawValue","calculatedSum","fieldSum","parseInt","env","Endpoints","local","location","href","indexOf","azure","endpoints","whichEnv","MenuComponent","observer","subscriber","localStorage","removeItem","next","x","reload","AuthGuardService","state","currentUser","AuthenticationService","http","currentUserSubject","JSON","parse","getItem","asObservable","post","accessToken","setItem","stringify","environment","production"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './authorized/home/home.component';\nimport { LoginRegisterLandingComponent } from './components/login-register-landing/login-register-landing.component';\nimport { FrontPageComponent } from './components/front-page/front-page.component';\n// Children of Home\nimport { HomeLandingComponent } from './authorized/home-landing/home-landing.component';\nimport { ProvideServiceComponent } from './authorized/provide-service/provide-service.component';\nimport { NeedServiceComponent } from './authorized/need-service/need-service.component';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login-register', component: LoginRegisterLandingComponent },\n  { path: 'front-page', component: FrontPageComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full', canActivate: [AuthGuardService] },\n  {\n    path: 'home', component: HomeComponent, children: [\n      { path: '', component: HomeLandingComponent },\n      { path: 'provide-service', component: ProvideServiceComponent },\n      { path: 'need-service', component: NeedServiceComponent }\n    ], canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<!-- <app-menu></app-menu> -->\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'uicomponent';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './nav/menu/menu.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { LoginComponent } from './components/login/login.component';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './authorized/home/home.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProvideServiceComponent } from './authorized/provide-service/provide-service.component';\nimport { NeedServiceComponent } from './authorized/need-service/need-service.component';\nimport { HomeLandingComponent } from './authorized/home-landing/home-landing.component';\nimport { LoginRegisterLandingComponent } from './components/login-register-landing/login-register-landing.component';\nimport { FrontPageComponent } from './components/front-page/front-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProvideServiceComponent,\n    NeedServiceComponent,\n    HomeLandingComponent,\n    LoginRegisterLandingComponent,\n    FrontPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    // MAT\n    MatFormFieldModule,\n    MatInputModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"carousel mt-4\">\n    <ngb-carousel *ngIf=\"images\" [interval]=\"5000\" [pauseOnHover]=\"true\">\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[0]\" alt=\"Random first slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </div>\n        </ng-template>\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[1]\" alt=\"Random second slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n            </div>\n        </ng-template>\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[2]\" alt=\"Random third slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>Third slide label</h3>\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </div>\n        </ng-template>\n    </ngb-carousel>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-landing',\n  templateUrl: './home-landing.component.html',\n  styleUrls: ['./home-landing.component.scss']\n})\nexport class HomeLandingComponent implements OnInit {\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menu [user]=\"user\"></app-menu>\n<div class=\"container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\n//import { UserProfileService } from '../../_services/user-profile.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  user: any;\n  //images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor(private authenticationService: AuthenticationService/*, private userProfileService: UserProfileService*/) { }\n\n  ngOnInit(): void {\n    //let email = this.authenticationService.currentUserValue.email;\n    // this.userProfileService.getUserProfile(email).subscribe(res => {\n    //   this.user = res;\n    // }, err => { });\n    this.user = {\n      userName: 'Jeewan',\n      profilePicture: ''\n    };\n  }\n\n}\n","<p>need-service works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-need-service',\n  templateUrl: './need-service.component.html',\n  styleUrls: ['./need-service.component.scss']\n})\nexport class NeedServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>provide-service works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provide-service',\n  templateUrl: './provide-service.component.html',\n  styleUrls: ['./provide-service.component.scss']\n})\nexport class ProvideServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"nav-wrapper container-fullwidth\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <nav class=\"navbar navbar-expand-sm bg-light navbar-light justify-content-end\">\n                <a class=\"navbar-brand\" href=\"#\">| LOGO |</a>\n                <button class=\"btn btn-link ml-auto mr-1 price\">Price</button>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse flex-grow-0\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav text-right\">\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">How It Works</a>\n                        </li>\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Provide Service</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Need Service</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" [routerLink]=\"'/login-register'\">Login</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </div>\n    </div>\n</div>\n\n<div>\n    <div class=\"carousel mt-4\">\n        <ngb-carousel *ngIf=\"images\" [interval]=\"5000\" [pauseOnHover]=\"true\">\n            <ng-template ngbSlide>\n                <div class=\"picsum-img-wrapper\">\n                    <img [src]=\"images[0]\" alt=\"Random first slide\">\n                </div>\n                <div class=\"carousel-caption\">\n                    <h3>First slide label</h3>\n                    <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                </div>\n            </ng-template>\n            <ng-template ngbSlide>\n                <div class=\"picsum-img-wrapper\">\n                    <img [src]=\"images[1]\" alt=\"Random second slide\">\n                </div>\n                <div class=\"carousel-caption\">\n                    <h3>Second slide label</h3>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                </div>\n            </ng-template>\n            <ng-template ngbSlide>\n                <div class=\"picsum-img-wrapper\">\n                    <img [src]=\"images[2]\" alt=\"Random third slide\">\n                </div>\n                <div class=\"carousel-caption\">\n                    <h3>Third slide label</h3>\n                    <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                </div>\n            </ng-template>\n        </ngb-carousel>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-front-page',\n  templateUrl: './front-page.component.html',\n  styleUrls: ['./front-page.component.scss']\n})\nexport class FrontPageComponent implements OnInit {\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"nav-wrapper container-fullwidth\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <nav class=\"navbar navbar-expand-sm bg-light navbar-light justify-content-end\">\n                <a class=\"navbar-brand\" href=\"#\">| LOGO |</a>\n                <button class=\"btn btn-link ml-auto mr-1 price\">Price</button>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse flex-grow-0\" id=\"navbarSupportedContent\">\n                    <ul class=\"navbar-nav text-right\">\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">How It Works</a>\n                        </li>\n                        <li class=\"nav-item active\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Provide Service</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Need Service</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" [routerLink]=\"'/login-register'\">Login</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </div>\n    </div>\n</div>\n\n<div class=\"login-form-wrapper container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <app-login></app-login>\n        </div>\n        <div class=\"col-md-6\">\n            <app-register></app-register>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-register-landing',\n  templateUrl: './login-register-landing.component.html',\n  styleUrls: ['./login-register-landing.component.scss']\n})\nexport class LoginRegisterLandingComponent implements OnInit {\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"login-form-wrapper container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Login</h2>\n            <form [formGroup]=\"loginForm\" class=\"login-form\">\n                <div class=\"form-group\">\n                    <div class=\"col-md-12\">\n                        <label *ngIf=\"loginSuccess === false\" class=\"text-danger\">Login unsuccessful</label>\n                    </div>\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>User Name</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"email\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput placeholder=\"Placeholder\" formControlName=\"password\">\n                    </mat-form-field>\n                </div>\n                <div class=\"form-group p-3\">\n                    <button [disabled]=\"loading\" class=\"btn btn-link\" (click)=\"onSubmit($event)\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                    <!-- <button [disabled]=\"loading\" class=\"btn btn-link\">\n                        <a routerLink=\"/register\" routerLinkActive=\"\">Register</a>\n                    </button> -->\n                    <!-- <a routerLink=\"/\" routerLinkActive=\"\" (click)=\"onSubmit($event)\">Login</a>\n            <a routerLink=\"/register\" routerLinkActive=\"\">Register</a> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  loginSuccess = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.f);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.result === true) {\n            this.router.navigate(['/home']);\n            this.loginSuccess = true;\n          } else {\n            this.loading = false;\n            this.loginSuccess = false;\n          }\n        },\n        error => {\n          console.log(error);\n          this.loading = false;\n        });\n  }\n\n}\n","<div class=\"register-form-wrapper container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Register</h2>\n            <form [formGroup]=\"registerForm\" class=\"register-form\">\n                <div class=\"form-group\">\n                    <div class=\"col-md-12\">\n                        <label *ngIf=\"registerSuccess === false\" class=\"text-danger\">Register unsuccessful</label>\n                    </div>\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>First Name</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"firstName\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Last Name</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"lastName\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Email</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"email\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Phone</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"phone\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput placeholder=\"Placeholder\" formControlName=\"password\">\n                    </mat-form-field>\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Repeat Password</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"repeatPassword\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div>\n                    <label>Please verify you are not a robot</label>\n                    <div class=\"text-danger\" *ngIf=\"verified === false && submitted === true\">\n                        Add two numbers and type the sum below.\n                    </div>\n                </div>\n                <div class=\"row form-group verification\">\n                    <div class=\"col-md-4\">\n                        <input formControlName=\"verifyNumber1\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-md-4\">\n                        <input class=\"text-center\" formControlName=\"verifyNumber2\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-md-4\">\n                        <input formControlName=\"verifyResult\" placeholder=\"?\" autocomplete=\"off\">\n                    </div>\n                </div>\n                <div class=\"form-group p-3\">\n                    <button [disabled]=\"loading\" class=\"btn btn-link\" (click)=\"onSubmit($event)\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Submit\n                    </button>\n                    <!-- <button [disabled]=\"loading\" class=\"btn btn-link\">\n                        <a routerLink=\"/register\" routerLinkActive=\"\">Register</a>\n                    </button> -->\n                    <!-- <a routerLink=\"/\" routerLinkActive=\"\" (click)=\"onSubmit($event)\">Login</a>\n            <a routerLink=\"/register\" routerLinkActive=\"\">Register</a> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  registerSuccess = true;\n  verified = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['', Validators.required],\n      password: ['', Validators.required],\n      repeatPassword: ['', Validators.required],\n      verifyNumber1: [{ value: '', disabled: true }],\n      verifyNumber2: [{ value: '', disabled: true }],\n      verifyResult: ['']\n    });\n\n    this.registerForm.patchValue({\n      verifyNumber1: Math.floor(Math.random() * 10),\n      verifyNumber2: Math.floor(Math.random() * 10)\n    });\n\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() { return this.registerForm.controls; }\n\n  onSubmit(e) {\n    this.submitted = true;\n    e.preventDefault();\n    const isVerified = this.verifyResult(this.registerForm.getRawValue());\n    console.log(isVerified);\n    if (isVerified === true) {\n      this.verified = true;\n      this.authenticationService.register(this.registerForm.value).subscribe(res => {\n        console.log(res);\n      }, err => { });\n    } else {\n\n    }\n    // this.authenticationService.register(this.registerForm.value).subscribe(res => {\n    //   console.log(res);\n    // }, err => { });\n  }\n\n  verifyResult(rawValue) {\n    const calculatedSum = rawValue.verifyNumber1 + rawValue.verifyNumber2;\n    const fieldSum = parseInt(rawValue.verifyResult, 10);\n    return calculatedSum === fieldSum;\n  }\n}\n","\n/*\n    dev = deployed env\n    local = localhost => eg. http://localhost:4040/login\n*/\n\nconst env = 'local';\nexport class Endpoints {\n    // static endpoints = {\n    //     // login: env === 'local' ? 'http://localhost:4040/login' : 'https://codiv-azure-app.azurewebsites.net/login',\n    //     // register: env === 'local' ? 'http://localhost:4040/register' : '/register'\n    //     login: location.href.indexOf('localhost') > -1 ? 'http://localhost:4040/login' : 'https://codiv-azure-app.azurewebsites.net/login',\n    //     register: location.href.indexOf('localhost') > -1\n    //         ? 'http://localhost:4040/register' : 'https://codiv-azure-app.azurewebsites.net/register'\n    // };\n\n    static endpoints = Endpoints.whichEnv();\n\n    static whichEnv() {\n        const local = location.href.indexOf('localhost') > -1;\n        const azure = location.href.indexOf('azure') > -1;\n        let endpoints = {\n            login: '',\n            register: ''\n        };\n        if (local === true) {\n            endpoints = {\n                login: 'http://localhost:4040/login',\n                register: 'http://localhost:4040/register'\n            };\n        } else if (azure === true) {\n            endpoints = {\n                login: 'https://codiv-azure-app.azurewebsites.net/login',\n                register: 'https://codiv-azure-app.azurewebsites.net/register'\n            };\n        }\n\n        return endpoints;\n    }\n}","<div class=\"nav-wrapper container-fullwidth\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <nav class=\"navbar navbar-expand-lg nvbar-light\">\n        <a class=\"navbar-brand\" href=\"#\">| LOGO |</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Provide Service</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"'/home/need-service'\">Need Service</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" style=\"color: #fbd827;\" [routerLink]=\"'/'\" (click)=\"beMember($event)\">Upgrade</a>\n            </li>\n          </ul>\n          <div class=\"form-inline my-2 my-lg-0\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"userClicked($event)\">Hello,\n                  {{user?.userName | uppercase }}</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"'/profile'\" (click)=\"userClicked($event)\">\n                  <img [src]=\"user?.profilePicture === '' ? './assets/images/profile.png' : user?.profilePicture\"\n                    class=\"user-profile-pic\" />\n                </a>\n\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"logout($event)\">Logout</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n    </div>\n  </div>\n</div>\n\n<!-- <app-overlay *ngIf=\"loggingOut === true\"></app-overlay> -->","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  @Input() user: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.user);\n  }\n\n  beMember(e) { }\n  userClicked(e) { }\n  test() { }\n\n  logout(e) {\n    e.preventDefault();\n    const observer = new Observable(subscriber => {\n      localStorage.removeItem('jwt');\n      subscriber.next('logout');\n    });\n    observer.subscribe(x => {\n      if (x === 'logout') {\n        location.reload();\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    console.log(currentUser);\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/front-page']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Endpoints } from '../constants/enpoints';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user';\n//import { Endpoints } from '../constants/enpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('jwt')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  public setCurrentUserValue(user) {\n    this.currentUserSubject.next(user);\n  }\n\n  login(email: string, password: string) {\n    return this.http.post<any>(Endpoints.endpoints.login, { email, password })\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.accessToken) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          // localStorage.setItem('currentUser', JSON.stringify(user));\n          // this.currentUserSubject.next(user);\n          localStorage.setItem('jwt', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n        }\n\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('jwt');\n    this.currentUserSubject.next(null);\n  }\n\n  register(user) {\n    return this.http.post<any>(Endpoints.endpoints.register, user);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}