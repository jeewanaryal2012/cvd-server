{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authorized/home-landing/home-landing.component.html","./src/app/authorized/home-landing/home-landing.component.ts","./src/app/authorized/home/home.component.html","./src/app/authorized/home/home.component.ts","./src/app/authorized/need-service/need-service.component.html","./src/app/authorized/need-service/need-service.component.ts","./src/app/authorized/provide-service/provide-service.component.html","./src/app/authorized/provide-service/provide-service.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/constants/enpoints.ts","./src/app/nav/menu/menu.component.html","./src/app/nav/menu/menu.component.ts","./src/app/services/auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './authorized/home/home.component';\n\n// Children of Home\nimport { HomeLandingComponent } from './authorized/home-landing/home-landing.component';\nimport { ProvideServiceComponent } from './authorized/provide-service/provide-service.component';\nimport { NeedServiceComponent } from './authorized/need-service/need-service.component';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full', canActivate: [AuthGuardService] },\n  {\n    path: 'home', component: HomeComponent, children: [\n      { path: '', component: HomeLandingComponent },\n      { path: 'provide-service', component: ProvideServiceComponent },\n      { path: 'need-service', component: NeedServiceComponent }\n    ], canActivate: [AuthGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<!-- <app-menu></app-menu> -->\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'uicomponent';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './nav/menu/menu.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { LoginComponent } from './components/login/login.component';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './authorized/home/home.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProvideServiceComponent } from './authorized/provide-service/provide-service.component';\nimport { NeedServiceComponent } from './authorized/need-service/need-service.component';\nimport { HomeLandingComponent } from './authorized/home-landing/home-landing.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProvideServiceComponent,\n    NeedServiceComponent,\n    HomeLandingComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    // MAT\n    MatFormFieldModule,\n    MatInputModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"carousel mt-4\">\n    <ngb-carousel *ngIf=\"images\" [interval]=\"5000\" [pauseOnHover]=\"true\">\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[0]\" alt=\"Random first slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </div>\n        </ng-template>\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[1]\" alt=\"Random second slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>Second slide label</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n            </div>\n        </ng-template>\n        <ng-template ngbSlide>\n            <div class=\"picsum-img-wrapper\">\n                <img [src]=\"images[2]\" alt=\"Random third slide\">\n            </div>\n            <div class=\"carousel-caption\">\n                <h3>Third slide label</h3>\n                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </div>\n        </ng-template>\n    </ngb-carousel>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-landing',\n  templateUrl: './home-landing.component.html',\n  styleUrls: ['./home-landing.component.scss']\n})\nexport class HomeLandingComponent implements OnInit {\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menu [user]=\"user\"></app-menu>\n<div class=\"container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\n//import { UserProfileService } from '../../_services/user-profile.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  user: any;\n  //images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n  constructor(private authenticationService: AuthenticationService/*, private userProfileService: UserProfileService*/) { }\n\n  ngOnInit(): void {\n    //let email = this.authenticationService.currentUserValue.email;\n    // this.userProfileService.getUserProfile(email).subscribe(res => {\n    //   this.user = res;\n    // }, err => { });\n    this.user = {\n      userName: 'Jeewan',\n      profilePicture: ''\n    };\n  }\n\n}\n","<p>need-service works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-need-service',\n  templateUrl: './need-service.component.html',\n  styleUrls: ['./need-service.component.scss']\n})\nexport class NeedServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>provide-service works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provide-service',\n  templateUrl: './provide-service.component.html',\n  styleUrls: ['./provide-service.component.scss']\n})\nexport class ProvideServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"login-form-wrapper container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Login</h2>\n            <form [formGroup]=\"loginForm\" class=\"login-form\">\n                <div class=\"form-group\">\n                    <div class=\"col-md-12\">\n                        <label *ngIf=\"loginSuccess === false\" class=\"text-danger\">Login unsuccessful</label>\n                    </div>\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>User Name</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"email\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput placeholder=\"Placeholder\" formControlName=\"password\">\n                    </mat-form-field>\n                </div>\n                <div class=\"form-group p-3\">\n                    <button [disabled]=\"loading\" class=\"btn btn-link\" (click)=\"onSubmit($event)\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                    <button [disabled]=\"loading\" class=\"btn btn-link\">\n                        <a routerLink=\"/register\" routerLinkActive=\"\">Register</a>\n                    </button>\n                    <!-- <a routerLink=\"/\" routerLinkActive=\"\" (click)=\"onSubmit($event)\">Login</a>\n            <a routerLink=\"/register\" routerLinkActive=\"\">Register</a> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  loginSuccess = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.f);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.result === true) {\n            this.router.navigate(['/home']);\n            this.loginSuccess = true;\n          } else {\n            this.loading = false;\n            this.loginSuccess = false;\n          }\n        },\n        error => {\n          console.log(error);\n          this.loading = false;\n        });\n  }\n\n}\n","<p>register works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n/*\n    dev = deployed env\n    local = localhost => eg. http://localhost:4040/login\n*/\nconst env = 'local';\nexport class Endpoints {\n    static endpoints = {\n        // login: env === 'local' ? 'http://localhost:4040/login' : 'https://codiv-azure-app.azurewebsites.net/login',\n        // register: env === 'local' ? 'http://localhost:4040/register' : '/register'\n        login: 'https://codiv-azure-app.azurewebsites.net/login',\n        register: 'https://codiv-azure-app.azurewebsites.net/register'\n    };\n}","<div class=\"nav-wrapper container-fullwidth\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <nav class=\"navbar navbar-expand-lg nvbar-light\">\n        <a class=\"navbar-brand\" href=\"#\">| LOGO |</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" [routerLink]=\"'/home/provide-service'\">Provide Service</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"'/home/need-service'\">Need Service</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" style=\"color: #fbd827;\" [routerLink]=\"'/'\" (click)=\"beMember($event)\">Upgrade</a>\n            </li>\n          </ul>\n          <div class=\"form-inline my-2 my-lg-0\">\n            <ul class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"userClicked($event)\">Hello,\n                  {{user?.userName | uppercase }}</a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"'/profile'\" (click)=\"userClicked($event)\">\n                  <img [src]=\"user?.profilePicture === '' ? './assets/images/profile.png' : user?.profilePicture\"\n                    class=\"user-profile-pic\" />\n                </a>\n\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\" (click)=\"logout($event)\">Logout</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n    </div>\n  </div>\n</div>\n\n<!-- <app-overlay *ngIf=\"loggingOut === true\"></app-overlay> -->","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  @Input() user: any;\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.user);\n  }\n\n  beMember(e) { }\n  userClicked(e) { }\n  test() { }\n\n  logout(e) {\n    e.preventDefault();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    console.log(currentUser);\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Endpoints } from '../constants/enpoints';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user';\n//import { Endpoints } from '../constants/enpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('jwt')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  public setCurrentUserValue(user) {\n    this.currentUserSubject.next(user);\n  }\n\n  login(email: string, password: string) {\n    return this.http.post<any>(Endpoints.endpoints.login, { email, password })\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.accessToken) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          // localStorage.setItem('currentUser', JSON.stringify(user));\n          // this.currentUserSubject.next(user);\n          localStorage.setItem('jwt', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n        }\n\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('jwt');\n    this.currentUserSubject.next(null);\n  }\n\n  register() {\n    const users = {\n      \"firstName\": \"Sam\",\n      \"lastName\": \"Tik\",\n      \"email\": 'emaail',\n      \"phone\": \"999-000-2222\",\n      \"password\": \"passsam\"\n    };\n    return this.http.post<any>(`http://localhost:4040/register`, users);\n    // .pipe(map(user => {\n    //   // login successful if there's a jwt token in the response\n    //   console.log(user);\n    //   // if (user && user.accessToken) {\n    //   //   // store user details and jwt token in local storage to keep user logged in between page refreshes\n    //   //   // localStorage.setItem('currentUser', JSON.stringify(user));\n    //   //   // this.currentUserSubject.next(user);\n    //   //   localStorage.setItem('jwt', JSON.stringify(user));\n    //   //   this.currentUserSubject.next(user);\n    //   // }\n\n    //   //return user;\n    // }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}