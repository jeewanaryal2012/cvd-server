{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/constants/enpoints.ts","webpack:///src/app/nav/menu/menu.component.html","webpack:///src/app/nav/menu/menu.component.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","AppComponent","title","AppModule","LoginComponent","formBuilder","route","router","authenticationService","loading","submitted","loginSuccess","currentUserValue","navigate","loginForm","group","email","required","password","returnUrl","snapshot","queryParams","preventDefault","console","log","f","invalid","login","value","pipe","subscribe","data","result","error","controls","env","Endpoints","endpoints","register","MenuComponent","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","user","next","post","accessToken","setItem","stringify","removeItem","users","environment","production","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-menu></app-menu>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'uicomponent';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './nav/menu/menu.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { LoginComponent } from './components/login/login.component';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    ProfileComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    // MAT\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"login-form-wrapper container container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h2>Login</h2>\n            <form [formGroup]=\"loginForm\" class=\"login-form\">\n                <div class=\"form-group\">\n                    <div class=\"col-md-12\">\n                        <label *ngIf=\"loginSuccess === false\" class=\"text-danger\">Login unsuccessful</label>\n                    </div>\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>User Name</mat-label>\n                        <input matInput placeholder=\"Placeholder\" formControlName=\"email\" autocomplete=\"off\">\n                    </mat-form-field>\n\n                </div>\n                <div class=\"form-group\">\n                    <mat-form-field appearance=\"outline\" class=\"col-md-12\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput placeholder=\"Placeholder\" formControlName=\"password\">\n                    </mat-form-field>\n                </div>\n                <div class=\"form-group p-3\">\n                    <button [disabled]=\"loading\" class=\"btn btn-link\" (click)=\"onSubmit($event)\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                    <button [disabled]=\"loading\" class=\"btn btn-link\">\n                        <a routerLink=\"/register\" routerLinkActive=\"\">Register</a>\n                    </button>\n                    <!-- <a routerLink=\"/\" routerLinkActive=\"\" (click)=\"onSubmit($event)\">Login</a>\n            <a routerLink=\"/register\" routerLinkActive=\"\">Register</a> -->\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  loginSuccess = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.f);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.result === true) {\n            this.router.navigate(['/home']);\n            this.loginSuccess = true;\n          } else {\n            this.loading = false;\n            this.loginSuccess = false;\n          }\n        },\n        error => {\n          console.log(error);\n          this.loading = false;\n        });\n  }\n\n}\n","\n/*\n    dev = deployed env\n    local = localhost => eg. http://localhost:4040/login\n*/\nconst env = 'local';\nexport class Endpoints {\n    static endpoints = {\n        login: env === 'local' ? 'http://localhost:4040/login' : '/local',\n        register: env === 'local' ? 'http://localhost:4040/register' : '/register'\n    };\n}","<ul>\n  <li>\n    <a class=\"nav-link\" [routerLink]=\"'/login'\">Login</a>\n  </li>\n</ul>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Endpoints } from '../constants/enpoints';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user';\n//import { Endpoints } from '../constants/enpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('jwt')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  public setCurrentUserValue(user) {\n    this.currentUserSubject.next(user);\n  }\n\n  login(email: string, password: string) {\n    return this.http.post<any>(Endpoints.endpoints.login, { email, password })\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.accessToken) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          // localStorage.setItem('currentUser', JSON.stringify(user));\n          // this.currentUserSubject.next(user);\n          localStorage.setItem('jwt', JSON.stringify(user));\n          this.currentUserSubject.next(user);\n        }\n\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('jwt');\n    this.currentUserSubject.next(null);\n  }\n\n  register() {\n    const users = {\n      \"firstName\": \"Sam\",\n      \"lastName\": \"Tik\",\n      \"email\": 'emaail',\n      \"phone\": \"999-000-2222\",\n      \"password\": \"passsam\"\n    };\n    return this.http.post<any>(`http://localhost:4040/register`, users);\n    // .pipe(map(user => {\n    //   // login successful if there's a jwt token in the response\n    //   console.log(user);\n    //   // if (user && user.accessToken) {\n    //   //   // store user details and jwt token in local storage to keep user logged in between page refreshes\n    //   //   // localStorage.setItem('currentUser', JSON.stringify(user));\n    //   //   // this.currentUserSubject.next(user);\n    //   //   localStorage.setItem('jwt', JSON.stringify(user));\n    //   //   this.currentUserSubject.next(user);\n    //   // }\n\n    //   //return user;\n    // }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}