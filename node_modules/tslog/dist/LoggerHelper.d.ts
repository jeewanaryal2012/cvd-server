/// <reference types="node" />
import { Logger } from "./index";
import { Chalk } from "chalk";
import { ICodeFrame, IJsonHighlightColors, ILogObject, IStackFrame } from "./interfaces";
/** @internal */
export declare class LoggerHelper {
    static cwdArray: string[];
    static cleanUpFilePath(fileName: string | null): string | null;
    static isError(e: Error | unknown): boolean;
    static getCallSites(error?: Error, cleanUp?: boolean): NodeJS.CallSite[];
    static toStackFrameObject(stackFrame: NodeJS.CallSite): IStackFrame;
    static errorToJsonHelper(): void;
    static overwriteConsole($this: Logger, handleLog: Function): ILogObject | void;
    static colorizeJson(json: string | object, chalk: Chalk, colors: IJsonHighlightColors, indent?: boolean): string;
    static _getCodeFrame(filePath: string, lineNumber: number, columnNumber: number | null, linesBeforeAndAfter: number): ICodeFrame;
    static lineNumberTo3Char(lineNumber: number): string;
}
//# sourceMappingURL=LoggerHelper.d.ts.map